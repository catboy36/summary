// XSS, XSRF,SQL

// XSS
// Cross Site Scripting 跨站脚本攻击
// 允许攻击者将恶意代码植入到给用户使用的页面中
// 涉及攻击者，客户端，web应用

// 根据攻击的来源，XSS 攻击分为：
// 1.存储型
// 攻击者将恶意代码提交到目标网站的数据库中
// 用户打开网站，服务端将恶意代码从数据库取出，拼接 HTML中返回浏览器
// 常见于带有用户保存数据的网站功能：论坛发帖，商品评论，用户私信

// 2.反射型
// 攻击者构造出特殊 url，其中包含恶意代码
// 用户打开带有恶意代码的 url，网站服务端将恶意代码从 url中取出，拼接 html返回浏览器
// 用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行
// 恶意代码窃取用户数据发送到攻击者网站，或者冒充用户行为，调用目标网站接口攻击

// 反射型和存储型的区别：存储型 XSS的恶意代码存在数据库中，反射型 XSS的恶意代码存在 URL中
// 反射型 XSS：网站搜索，跳转，用户需要主动打开恶意 URL，少见引导用户点击表单提交（post）

// DOM型 XSS
// 攻击者构造出特殊的 URL，其中包含恶意代码
// 用户打开带有恶意代码的 URL
// 用户浏览器接收到相应后解析执行，前端 js取出 url中恶意代码执行
// 恶意代码窃取用户数据发送到攻击者网站，或者冒充用户行为，调用目标网站接口攻击
// DOM型和前两的区别：DOM型 XSS攻击中，恶意代码的取出和执行都由浏览器完成，属于前端 js自身的安全漏洞，其它两种 XSS属于服务端的安全漏洞

// XSS的预防
// XSS攻击两大要素：攻击者提交恶意代码，浏览器执行恶意代码
// 过滤不一定可靠，可能导致内容在不同地方不同显示

// CSRF
// Cross-Site Request Forgery 跨站请求伪造
// 攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求
// 利用受害者在被攻击网站已经获取的注册凭证，绕过后台用户验证，达到冒充用户对被攻击网站执行操作
// CSRF可以通过get请求，即通过访问 img的页面后，浏览器自动访问目标地址，发送请求；也可以设置一个自动提交的表单发送（post请求）
// 特点：
// 攻击发起在第三方网站，攻击利用被害者在被攻击网站的登录凭证冒充，不窃取登录凭证，只是冒用，方式多
// 预防：
// 阻止不明外域的访问（同源监测，Samesite Cookie），提交时要求附加本域才能获取信息，CSRF Token
// 双重 token
// 用户打开页面，服务器给用户生成一个 token，get请求，token赋于请求 url后，post请求，要在 form最后加上
// 服务器对于每次请求，判断 token的有效性

// SQL 注入攻击
// 将恶意的 Sql查询或添加语句插入到应用的输入参数中，在后台 Sql服务器解析执行进行攻击
// 预防：严格检查输入变量的类型和格式，过滤和转义特殊字符，对访问数据库的 web应用程序采用 web应用防火墙

