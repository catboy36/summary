// 与webpack类似的工具，区别
// 模块化工具

// rollup
// parcel
// snowpack
// vite
// webpack

// rollup
// 一款es modules打包器，作用和webpack类似，小巧很多
// 默认开启tree shaking
// 优点：代码效率更简洁，效率更高，默认支持tree shaking
// 不支持导入commonjs模块，需要插件，不适合项目开发，可以考虑第三方库开发使用，不支持hmr
// 打包js库时，比webpack有优势，因为打出的包更小更快

// parcel
// 零配置，傻瓜式的使用体验
// 自动开启开发服务器，支持hmr，自动安装依赖
// 打包过程多进程同时工作，构建速度比webpack快，输出文件会压缩，样式代码也会提前单独文件
// 只管业务代码，其它事情parcel解决

// snowpack
// 闪电般快速的前端构建工具，专为现代web设计，较复杂打包工具替代方案，利用js的本金模块系统，避免不必要的工作并保持流程的开发体验
// 开发阶段，每次保存耽搁文件时，snowpack为应用程序每个文件构建一次就可以永久缓存，文件更改时，snowpack会重新构建单个文件
// 重新构建每次变更没有任何时间浪费，只需要在浏览器进行hmr更新

// vite
// 由 一个开发服务器，一套构建指令组成
// 直接启动开发服务器，不需要进行打包操作，意味着不需要分析模块依赖，不需要编译，因此启动速度非常快
// 利用现代浏览器支持 ES Module的特性，浏览器请求某个模块，再根据需要对模块内容进行编译，大大缩短编译时间
// hmr方面，修改一个模块，仅需让浏览器重新请求该模块即可，无法像webpack那样把模块相关依赖全部编译依次，效率高


// webpack
// 相比上述模块化工具，webpack大而全，很多功能可以开箱即用，核心特点：一切皆模块和按需加载
// 和其它构建工具比的优势：
// 1.对commonJS，AMD,ES6语法做了兼容
// 2.对js,css,图片等资源都支持打包
// 3. hmr, tree-shaking
// 4. 代码分割
// 5. 分发的plugin
// 6. 易于调试 sourceUrls sourceMaps
// 7. 快速运行：webpack使用异步IO，多级缓存，很快，增量编译更快
// 8. 生态环境好，社区更丰富，出现问题更容易解决
